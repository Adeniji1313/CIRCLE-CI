# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  print_pipeline_id:
    description: This will print the CircleCI workflow ID
    parameters:
      to:
        type: string
  
    steps:
      - run: echo << parameters.to >>



jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  print-hello:
    docker:
      - image: circleci/node:13.8.0

    steps:
      - checkout
      - run:
          name: "print-hello"
          command:  "echo Hello"

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0

    steps:
      - run: echo "text to Output" > output.txt

      - persist_to_workspace:
          root: .
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0

    steps:
      - attach_workspace: 
          at: .

      - run: cat ./output.txt

  my_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          to: << pipeline.id >>


    


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - my_job

