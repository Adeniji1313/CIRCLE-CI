# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs


commands:
  destroy_env:
    steps:
        - run:
            name: Destroy the Environment
            when: on_fail
            command: |
              aws cloudformation delete-stack --stack-name cicdStack-${CIRCLE_WORKFLOW_ID:0:5}



jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  create_infra:
    docker:
      - image: amazon/aws-cli

    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name cicdStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1

  configure_infra:
    docker:
      - image: python:3.7-alpine3.11

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["8a:7d:67:72:7f:71:35:89:65:bc:eb:cc:83:5d:1b:48"]

      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      

      - run:
          name: Run Playbook and Configure Server
          command: |
            ansible-playbook -i inventory.txt main.yml

  smoke_test:
    docker:
      - image: amazon/aws-cli

    steps:
        - run:
            name: smoke test
            command: 
                return 1

        - destroy_env
    
  deploy_front_end:
    docker:
      - image: amazon/aws-cli

    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloud formation stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name abbas-front-end-${CIRCLE_WORKFLOW_ID} \
            --parameter-overides MyBucketName="abbas-front-${CIRCLE_WORKFLOW_ID}"

      - run: aws s3 sync index.html s3://abbas-front-${CIRCLE_WORKFLOW_ID} --delete


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  my-workflow:
    jobs:
      - deploy_front_end
      # - create_infra
      # - configure_infra:
      #    requires:
      #      - create_infra

      

